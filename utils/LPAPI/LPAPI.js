var _0xd448 = ["\x2E\x2F\x44\x7A\x42\x4C\x45\x2E\x6A\x73", "\x2E\x2F\x42\x69\x74\x6D\x61\x70\x50\x61\x63\x6B\x61\x67\x65\x2E\x6A\x73", "\x2E\x2F\x42\x61\x72\x63\x6F\x64\x65\x57\x72\x69\x74\x65\x72\x2E\x6A\x73", "\x63\x75\x72\x72\x65\x6E\x74\x50\x72\x69\x6E\x74\x65\x72", "\x67\x6C\x6F\x62\x61\x6C\x44\x61\x74\x61", "\x44\x50\x49", "\x73\x65\x74\x53\x75\x70\x70\x6F\x72\x74\x50\x72\x65\x66\x69\x78\x73", "\x6E\x61\x6D\x65", "\x73\x74\x61\x72\x74\x53\x63\x61\x6E\x50\x65\x72\x69\x70\x68\x65\x72\x61\x6C\x73", "\x69\x6E\x69\x74\x42\x4C\x45", "\x6C\x65\x6E\x67\x74\x68", "\x52\x53\x53\x49", "\x73\x6F\x72\x74", "\x64\x65\x76\x69\x63\x65\x49\x64", "\x63\x6F\x6E\x6E\x65\x63\x74\x50\x65\x72\x69\x70\x68\x65\x72\x61\x6C", "\x73\x75\x62\x73\x74\x72\x69\x6E\x67", "\x74\x6F\x55\x70\x70\x65\x72\x43\x61\x73\x65", "\u6CA1\u6709\u53D1\u73B0\u6253\u5370\u673A", "", "\x73\x68\x6F\x77\x54\x6F\x61\x73\x74", "\x64\x69\x73\x63\x6F\x6E\x6E\x65\x63\x74\x50\x65\x72\x69\x70\x68\x65\x72\x61\x6C", "\x63\x72\x65\x61\x74\x65\x43\x61\x6E\x76\x61\x73\x43\x6F\x6E\x74\x65\x78\x74", "\u6CA1\u6709\u6B64\u753B\u5E03", "\u6B63\u5728\u751F\u6210\u6807\u7B7E\u56FE\u7247", "\x6C\x6F\x61\x64\x69\x6E\x67", "\x77\x69\x64\x74\x68", "\x68\x65\x69\x67\x68\x74", "\x63\x6C\x65\x61\x72\x52\x65\x63\x74", "\x64\x72\x61\x77", "\x73\x65\x74\x44\x61\x74\x61", "\x77\x68\x69\x74\x65", "\x73\x65\x74\x46\x69\x6C\x6C\x53\x74\x79\x6C\x65", "\x66\x69\x6C\x6C\x52\x65\x63\x74", "\x62\x6C\x61\x63\x6B", "\x68\x69\x64\x65\x54\x6F\x61\x73\x74", "\x63\x61\x6E\x76\x61\x73\x49\x64", "\x64\x61\x74\x61", "\x70\x75\x73\x68", "\x6C\x6F\x67", "\x63\x61\x6E\x76\x61\x73\x50\x75\x74\x49\x6D\x61\x67\x65\x44\x61\x74\x61", "\x63\x61\x6E\x76\x61\x73\x47\x65\x74\x49\x6D\x61\x67\x65\x44\x61\x74\x61", "\u6B63\u5728\u751F\u6210\u6253\u5370\u6570\u636E", "\u6807\u7B7E\u5BBD\u5EA6\uFF1A", "\u6807\u7B7E\u9AD8\u5EA6\uFF1A", "\x61\x72\x72\x61\x79\x57\x69\x74\x68\x49\x6D\x61\x67\x65", "\x73\x65\x6E\x64\x44\x61\x74\x61", "\x73\x65\x74\x46\x6F\x6E\x74\x53\x69\x7A\x65", "\x6C\x65\x66\x74", "\x73\x65\x74\x54\x65\x78\x74\x41\x6C\x69\x67\x6E", "\x63\x65\x6E\x74\x65\x72", "\x72\x69\x67\x68\x74", "\x66\x69\x6C\x6C\x54\x65\x78\x74", "\x73\x61\x76\x65", "\x50\x49", "\x72\x6F\x74\x61\x74\x65", "\x74\x72\x61\x6E\x73\x6C\x61\x74\x65", "\x62\x61\x72\x63\x6F\x64\x65", "\x72\x65\x73\x74\x6F\x72\x65", "\x71\x72\x63\x6F\x64\x65", "\x73\x65\x74\x4C\x69\x6E\x65\x57\x69\x64\x74\x68", "\x73\x74\x72\x6F\x6B\x65\x52\x65\x63\x74", "\x65\x78\x70\x6F\x72\x74\x73"]; var dzBLE = require(_0xd448[0]); var bitmapPackage = require(_0xd448[1]); var barcodeWriter = require(_0xd448[2]); var printWidth = 0; var printHeight = 0; var printOrientation = 0; var itemOrientation = 0; var itemHorizontalAlignment = 0; var itemVerticalAlignment = 0; var connectPrinterTimer; var canConnect = true; var printPageGapType = -1; var printPageGapLength = 2.0; var printDarkness = 0; var printSpeed = 0; var hasInit = false; var canvas = null; var canvasJS = null; var filePath = null; var isConnecting = false; function covert(_0x4d90x16) { _0x4d90x16 = _0x4d90x16 * DPI() / 25.4; _0x4d90x16 = _0x4d90x16 >= 0 ? _0x4d90x16 + 0.1 : _0x4d90x16 - 0.1; return parseInt(_0x4d90x16) } function DPI() { var _0x4d90x18 = 203; var _0x4d90x19 = getApp()[_0xd448[4]][_0xd448[3]]; _0x4d90x18 = _0x4d90x19[_0xd448[5]]; return _0x4d90x18 } function setPrintPageGapType(_0x4d90x1b) { printPageGapType = _0x4d90x1b } function setPrintPageGapLength(_0x4d90x1d) { printPageGapLength = _0x4d90x1d } function setPrintDarkness(_0x4d90x1f) { printDarkness = _0x4d90x1f } function setPrintSpeed(_0x4d90x21) { printSpeed = _0x4d90x21 } function setSupportPrefixs(_0x4d90x23) { dzBLE[_0xd448[6]](_0x4d90x23) } function connectingPrinterName() { var _0x4d90x19 = getApp()[_0xd448[4]][_0xd448[3]]; return _0x4d90x19[_0xd448[7]] } function initPrinterCenter(_0x4d90x26) { if (hasInit) { dzBLE[_0xd448[8]](function (_0x4d90x27) { _0x4d90x26(_0x4d90x27) }) } else { dzBLE[_0xd448[9]](function (_0x4d90x27) { hasInit = true; _0x4d90x26(_0x4d90x27) }) } } function scanedPrinters(_0x4d90x26) { initPrinterCenter(function (_0x4d90x27) { _0x4d90x26(_0x4d90x27) }) } function compare(_0x4d90x2a) { return function (_0x4d90x2b, _0x4d90x2c) { var _0x4d90x2d = _0x4d90x2b[_0x4d90x2a]; var _0x4d90x2e = _0x4d90x2c[_0x4d90x2a]; return _0x4d90x2e - _0x4d90x2d } } function openPrinter(_0x4d90x30, _0x4d90x31, _0x4d90x32) { if (isConnecting) { _0x4d90x31(); return }; initPrinterCenter(function (_0x4d90x27) { if (_0x4d90x27[_0xd448[10]] > 0) { if (_0x4d90x30 == null || _0x4d90x30[_0xd448[10]] == 0) { _0x4d90x27[_0xd448[12]](compare(_0xd448[11])); dzBLE[_0xd448[14]](_0x4d90x27[0][_0xd448[13]], function () { isConnecting = true; _0x4d90x31() }, function () { isConnecting = false; _0x4d90x32() }) } else { for (var _0x4d90x33 = 0; _0x4d90x33 < _0x4d90x27[_0xd448[10]]; _0x4d90x33++) { var _0x4d90x34 = _0x4d90x27[_0x4d90x33]; var _0x4d90x35 = _0x4d90x34[_0xd448[7]][_0xd448[15]](0, _0x4d90x30[_0xd448[10]]); if ((_0x4d90x35[_0xd448[16]]()) == (_0x4d90x30[_0xd448[16]]())) { dzBLE[_0xd448[14]](_0x4d90x34[_0xd448[13]]); break } } } } else { wx[_0xd448[19]]({ title: _0xd448[17], icon: _0xd448[18], image: _0xd448[18], duration: 2000, mask: true, success: function (_0x4d90x36) { }, fail: function (_0x4d90x36) { }, complete: function (_0x4d90x36) { } }) } }) } function connectingPrinterDetailInfos() { var _0x4d90x19 = getApp()[_0xd448[4]][_0xd448[3]]; return _0x4d90x19 } function closePrinter() { dzBLE[_0xd448[20]]() } function startDrawLabel(_0x4d90x3a, _0x4d90x3b, _0x4d90x3c, _0x4d90x3d, _0x4d90x3e) { canvas = wx[_0xd448[21]](_0x4d90x3a); if (canvas == null) { wx[_0xd448[19]]({ title: _0xd448[22], icon: _0xd448[18], image: _0xd448[18], duration: 2000, mask: true, success: function (_0x4d90x36) { }, fail: function (_0x4d90x36) { }, complete: function (_0x4d90x36) { } }) } else { wx[_0xd448[19]]({ title: _0xd448[23], icon: _0xd448[24], image: _0xd448[18], duration: 10000, mask: true, success: function (_0x4d90x36) { }, fail: function (_0x4d90x36) { }, complete: function (_0x4d90x36) { } }); printOrientation = _0x4d90x3e; printWidth = covert(_0x4d90x3c); printHeight = covert(_0x4d90x3d); itemOrientation = 0; itemHorizontalAlignment = 0; itemVerticalAlignment = 0; canvasJS = _0x4d90x3b; canvas[_0xd448[27]](0, 0, canvas[_0xd448[25]], canvas[_0xd448[26]]); canvas[_0xd448[28]](); canvasJS[_0xd448[29]]({ canvasWidth: printWidth, canvasHeight: printHeight }); canvas[_0xd448[31]](_0xd448[30]); canvas[_0xd448[32]](0, 0, printWidth + 5, printHeight + 5); canvas[_0xd448[31]](_0xd448[33]) } } function endDrawLabel() { canvas[_0xd448[28]](true, setTimeout(function () { if (printOrientation == 0) { wx[_0xd448[34]]() } else { wx[_0xd448[40]]({ canvasId: canvas[_0xd448[35]], x: 0, y: 0, width: printWidth, height: printHeight, success: function (_0x4d90x36) { var _0x4d90x40 = _0x4d90x36[_0xd448[36]]; var _0x4d90x41 = new Array(); if (printOrientation == 90) { for (var _0x4d90x42 = printWidth - 1; _0x4d90x42 >= 0; _0x4d90x42--) { for (var _0x4d90x43 = 0; _0x4d90x43 < printHeight; _0x4d90x43++) { var _0x4d90x44 = ((printWidth * _0x4d90x43) + _0x4d90x42) * 4; _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 0]); _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 1]); _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 2]); _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 3]) } }; var _0x4d90x45 = printWidth; printWidth = printHeight; printHeight = _0x4d90x45 } else { if (printOrientation == 180) { for (var _0x4d90x43 = printHeight - 1; _0x4d90x43 >= 0; _0x4d90x43--) { for (var _0x4d90x42 = printWidth - 1; _0x4d90x42 >= 0; _0x4d90x42--) { var _0x4d90x44 = ((printWidth * _0x4d90x43) + _0x4d90x42) * 4; _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 0]); _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 1]); _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 2]); _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 3]) } } } else { if (printOrientation == 270) { for (var _0x4d90x42 = 0; _0x4d90x42 < printWidth; _0x4d90x42++) { for (var _0x4d90x43 = printHeight - 1; _0x4d90x43 >= 0; _0x4d90x43--) { var _0x4d90x44 = ((printWidth * _0x4d90x43) + _0x4d90x42) * 4; _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 0]); _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 1]); _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 2]); _0x4d90x41[_0xd448[37]](_0x4d90x40[_0x4d90x44 + 3]) } }; var _0x4d90x45 = printWidth; printWidth = printHeight; printHeight = _0x4d90x45 } } }; canvasJS[_0xd448[29]]({ canvasWidth: printWidth, canvasHeight: printHeight }); var _0x4d90x46 = new Uint8ClampedArray(_0x4d90x41); wx[_0xd448[39]]({ canvasId: canvas[_0xd448[35]], data: _0x4d90x46, x: 0, y: 0, width: printWidth, height: printHeight, success: function (_0x4d90x36) { wx[_0xd448[34]]() }, fail: function (_0x4d90x36) { console[_0xd448[38]](_0x4d90x36) } }) } }) } }, 1000)) } function print(_0x4d90x48) { wx[_0xd448[19]]({ title: _0xd448[41], icon: _0xd448[24], image: _0xd448[18], duration: 10000, mask: true, success: function (_0x4d90x36) { }, fail: function (_0x4d90x36) { }, complete: function (_0x4d90x36) { } }); wx[_0xd448[40]]({ canvasId: canvas[_0xd448[35]], x: 0, y: 0, width: printWidth, height: printHeight, success: function (_0x4d90x36) { console[_0xd448[38]](_0xd448[42] + _0x4d90x36[_0xd448[25]]); console[_0xd448[38]](_0xd448[43] + _0x4d90x36[_0xd448[26]]); var _0x4d90x49 = bitmapPackage[_0xd448[44]](_0x4d90x36[_0xd448[36]], _0x4d90x36[_0xd448[25]], _0x4d90x36[_0xd448[26]], printPageGapType, printPageGapLength * 100, printDarkness, printSpeed, false); wx[_0xd448[34]](); dzBLE[_0xd448[45]](_0x4d90x49, function () { _0x4d90x48() }) } }) } function setItemOrientation(_0x4d90x3e) { if (_0x4d90x3e != 0 && _0x4d90x3e != 90 && _0x4d90x3e != 180 && _0x4d90x3e != 270) { return }; itemOrientation = _0x4d90x3e } function setItemHorizontalAlignment(_0x4d90x4c) { if (_0x4d90x4c != 0 && _0x4d90x4c != 1 && _0x4d90x4c != 2) { return }; itemHorizontalAlignment = _0x4d90x4c } function setItemVerticalAlignment(_0x4d90x4c) { if (_0x4d90x4c != 0 && _0x4d90x4c != 1 && _0x4d90x4c != 2) { return }; itemVerticalAlignment = _0x4d90x4c } function drawText(_0x4d90x4f, _0x4d90x50, _0x4d90x51, _0x4d90x52) { canvas[_0xd448[46]](covert(_0x4d90x52)); switch (itemHorizontalAlignment) { case 0: { canvas[_0xd448[48]](_0xd448[47]); break }; case 1: { canvas[_0xd448[48]](_0xd448[49]); break }; case 2: { canvas[_0xd448[48]](_0xd448[50]); break }; default: break }; canvas[_0xd448[51]](_0x4d90x4f, covert(_0x4d90x50), covert(_0x4d90x51)) } function drawBarcode(_0x4d90x4f, _0x4d90x50, _0x4d90x51, _0x4d90x3c, _0x4d90x3d) { _0x4d90x50 = covert(_0x4d90x50); _0x4d90x51 = covert(_0x4d90x51); _0x4d90x3c = covert(_0x4d90x3c); _0x4d90x3d = covert(_0x4d90x3d); canvas[_0xd448[52]](); switch (itemOrientation) { case 1: ; case 90: { canvas[_0xd448[54]](Math[_0xd448[53]] / 2); canvas[_0xd448[55]](parseInt(_0x4d90x51 - _0x4d90x50), parseInt(-_0x4d90x50 - _0x4d90x51 - _0x4d90x3c)); var _0x4d90x45 = _0x4d90x3c; _0x4d90x3c = _0x4d90x3d; _0x4d90x3d = _0x4d90x45; break }; case 2: ; case 180: { canvas[_0xd448[54]](Math.PI); canvas[_0xd448[55]](parseInt(-_0x4d90x50 * 2 - _0x4d90x3c), parseInt(-_0x4d90x51 * 2 - _0x4d90x3d)); break }; case 3: ; case 270: { canvas[_0xd448[54]](-Math[_0xd448[53]] / 2); canvas[_0xd448[55]](parseInt(-_0x4d90x50 - _0x4d90x51 - _0x4d90x3d), parseInt(_0x4d90x50 - _0x4d90x51)); var _0x4d90x45 = _0x4d90x3c; _0x4d90x3c = _0x4d90x3d; _0x4d90x3d = _0x4d90x45; break }; default: break }; barcodeWriter[_0xd448[56]](canvas, _0x4d90x4f, _0x4d90x50, _0x4d90x51, _0x4d90x3c, _0x4d90x3d); canvas[_0xd448[57]]() } function drawQRCode(_0x4d90x4f, _0x4d90x50, _0x4d90x51, _0x4d90x3c, _0x4d90x3d) { _0x4d90x50 = covert(_0x4d90x50); _0x4d90x51 = covert(_0x4d90x51); _0x4d90x3c = covert(_0x4d90x3c); _0x4d90x3d = covert(_0x4d90x3d); canvas[_0xd448[52]](); switch (itemOrientation) { case 1: ; case 90: { canvas[_0xd448[54]](Math[_0xd448[53]] / 2); canvas[_0xd448[55]](parseInt(_0x4d90x51 - _0x4d90x50), parseInt(-_0x4d90x50 - _0x4d90x51 - _0x4d90x3c)); var _0x4d90x45 = _0x4d90x3c; _0x4d90x3c = _0x4d90x3d; _0x4d90x3d = _0x4d90x45; break }; case 2: ; case 180: { canvas[_0xd448[54]](Math.PI); canvas[_0xd448[55]](parseInt(-_0x4d90x50 * 2 - _0x4d90x3c), parseInt(-_0x4d90x51 * 2 - _0x4d90x3d)); break }; case 3: ; case 270: { canvas[_0xd448[54]](-Math[_0xd448[53]] / 2); canvas[_0xd448[55]](parseInt(-_0x4d90x50 - _0x4d90x51 - _0x4d90x3d), parseInt(_0x4d90x50 - _0x4d90x51)); var _0x4d90x45 = _0x4d90x3c; _0x4d90x3c = _0x4d90x3d; _0x4d90x3d = _0x4d90x45; break }; default: break }; barcodeWriter[_0xd448[58]](canvas, _0x4d90x4f, _0x4d90x50, _0x4d90x51, _0x4d90x3c, _0x4d90x3d); canvas[_0xd448[57]]() } function drawLine(_0x4d90x50, _0x4d90x51, _0x4d90x3c, _0x4d90x3d) { drawRectangle(_0x4d90x50, _0x4d90x51, _0x4d90x3c, _0x4d90x3d, 0, true) } function drawRectangle(_0x4d90x50, _0x4d90x51, _0x4d90x3c, _0x4d90x3d, _0x4d90x57, _0x4d90x58) { _0x4d90x50 = covert(_0x4d90x50); _0x4d90x51 = covert(_0x4d90x51); _0x4d90x3c = covert(_0x4d90x3c); _0x4d90x3d = covert(_0x4d90x3d); _0x4d90x57 = covert(_0x4d90x57); canvas[_0xd448[52]](); switch (itemOrientation) { case 1: ; case 90: { canvas[_0xd448[54]](Math[_0xd448[53]] / 2); canvas[_0xd448[55]](parseInt(_0x4d90x51 - _0x4d90x50), parseInt(-_0x4d90x50 - _0x4d90x51 - _0x4d90x3c)); var _0x4d90x45 = _0x4d90x3c; _0x4d90x3c = _0x4d90x3d; _0x4d90x3d = _0x4d90x45; break }; case 2: ; case 180: { canvas[_0xd448[54]](Math.PI); canvas[_0xd448[55]](parseInt(-_0x4d90x50 * 2 - _0x4d90x3c), parseInt(-_0x4d90x51 * 2 - _0x4d90x3d)); break }; case 3: ; case 270: { canvas[_0xd448[54]](-Math[_0xd448[53]] / 2); canvas[_0xd448[55]](parseInt(-_0x4d90x50 - _0x4d90x51 - _0x4d90x3d), parseInt(_0x4d90x50 - _0x4d90x51)); var _0x4d90x45 = _0x4d90x3c; _0x4d90x3c = _0x4d90x3d; _0x4d90x3d = _0x4d90x45; break }; default: break }; canvas[_0xd448[59]](_0x4d90x57); if (_0x4d90x58) { canvas[_0xd448[31]](_0xd448[33]); canvas[_0xd448[32]](_0x4d90x50, _0x4d90x51, _0x4d90x3c, _0x4d90x3d) } else { canvas[_0xd448[60]](_0x4d90x50, _0x4d90x51, _0x4d90x3c, _0x4d90x3d) }; canvas[_0xd448[57]]() } module[_0xd448[61]] = { setPrintPageGapType: setPrintPageGapType, setPrintPageGapLength: setPrintPageGapLength, setPrintDarkness: setPrintDarkness, setPrintSpeed: setPrintSpeed, setSupportPrefixs: setSupportPrefixs, connectingPrinterName: connectingPrinterName, scanedPrinters: scanedPrinters, openPrinter: openPrinter, connectingPrinterDetailInfos: connectingPrinterDetailInfos, closePrinter: closePrinter, startDrawLabel: startDrawLabel, endDrawLabel: endDrawLabel, print: print, setItemOrientation: setItemOrientation, setItemHorizontalAlignment: setItemHorizontalAlignment, setItemVerticalAlignment: setItemVerticalAlignment, drawText: drawText, drawBarcode: drawBarcode, drawQRCode: drawQRCode, drawLine: drawLine, drawRectangle: drawRectangle }